/**
     * Checa que la sintaxis de la expresión escrita en una calculadora sea correcta
     * @param infijo: cadena de la expresión recibida de la calculadora
     * @return <ul>
     * <li> true: Si no existen errores en la sintaxis
     * <li> false: existe algún error en la sintaxis
     * </ul>
     */
    public boolean revisaTodo(String infijo){
        boolean res=true, puntos=false;
        PilaA<Character> pila= new PilaA();
        //Pila utilizada como auxiliar para contener los parentesis abiertos
        int i=0;
        char car=infijo.charAt(0), next, before, ultimo=infijo.charAt(infijo.length()-1);
        //Se checa el primer y el último caracter del String porque solo 
        //se llama al metodo si el String no está vacío. Por eso es posible
        
        //Este if marca error si el primer caracter es es simbolo de multiplicacion o division
        if(car=='*'||car=='/' ){
                res=false;
        }
        //Por otro lado que el primer caracter sea el simbolo de mas o de menos si es posible
        if(car=='+'||car=='-')
            i++;
        //Si el ultimo caracter es un operador o un punto se marca error ya que es incongruente
        if(ultimo=='*'||ultimo=='/' || ultimo=='+' || ultimo=='-' || ultimo=='.'){
            res=false;
        }
        //ciclo para recorrer la cadena infija caracter por caracter
        while(i<infijo.length() && res){
            car=infijo.charAt(i);
            if(car=='('){
                pila.push(car);
                //si hay un parentesis abierto se agrega a la pila
                if(i<infijo.length()-1){
                    next=infijo.charAt(i+1);
                    if(next=='*'||next=='/'||next==')')
                        res=false;
                    if(i>0&&res){
                        before=infijo.charAt(i-1);
                        if(before!='*'&&before!='+'&&before!='-'&&before!='/'&&before!='(')
                            res=false;
                    }
                }
            }
            else
                if(car==')'){
                    if(pila.isEmpty())
                        //Si se encuentra un parentesis para cerrar y no hay uno abierto en 
                        //la pila, es porque están incorrectos; es incorrecta la expresión
                        res=false;
                    else{
                        pila.pop();
                        //Se elimina de la pila el parentesis que se cerro
                        if(i<infijo.length()-1){
                            next=infijo.charAt(i+1);
                            if(next!='*'&&next!='+'&&next!='-'&&next!='/'&&next!=')')
                                //No puede haber un digito o punto después de un parentesis ya que
                                //no aceptamos los parentesis como multiplicadores
                            res=false;
                        }
                    }
                    
                }
                else{
                    if(car=='*'||car=='/'){
                        before=infijo.charAt(i-1);
                        if(before=='*'||before=='/' || before=='+' || before=='-')
                            //No se puede tener un operador y despues el simbolo de 
                            //multiplicación o division; es un error.
                            res=false;
                    }
                    
                    //Este if funciona para mandar error si hay dos puntos en un mismo numero
                    //Si el boolean puntos es true es porque ya hay un punto y el numero no ha terminado
                    if(puntos && car=='.')
                        res=false;
                    
                    if(car=='.'&& res){
                        puntos=true;
                        //Si encuentra un punto el boolean puntos se vuelve true
                        next=infijo.charAt(i+1);
                        if(!Character.isDigit(next)){
                            //Este if marca error si lo que esta despues de un punto no es un numero
                            res=false;
                        }
                    }
                    else
                        if(car=='+' || car=='-'||car=='*' || car=='/'){
                            //Cada que encuentra un operador regresa puntos a false
                            //porque ya termino el numero
                            puntos=false;
                        }
                }
            i++;
        }
        //Si la pila no esta vacia significa que un parentesis no se cerro por lo que está incorrecto
        if(!pila.isEmpty())
            res=false;
        
        return res;
    }
